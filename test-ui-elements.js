#!/usr/bin/env node

/**
 * EQWIP UI Elements Test Suite
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 */

const fs = require('fs');
const path = require('path');

// –¶–≤–µ—Ç–∞
const colors = {
  reset: '\x1b[0m',
  green: '\x1b[32m',
  red: '\x1b[31m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  cyan: '\x1b[36m',
  magenta: '\x1b[35m'
};

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

function testUIElements() {
  log('üé® –¢–ï–°–¢ UI –≠–õ–ï–ú–ï–ù–¢–û–í EQWIP', 'magenta');
  log('–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏, —Ñ–æ—Ä–º—ã –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã...', 'cyan');
  log('=' * 60, 'blue');
  
  let passed = 0;
  let failed = 0;
  let warnings = 0;
  const issues = [];
  
  // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  function testPageUI(pagePath, expectedElements) {
    if (!fs.existsSync(pagePath)) {
      log(`  ‚ùå ${pagePath} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`, 'red');
      failed++;
      issues.push(`–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${pagePath}`);
      return;
    }
    
    log(`  ‚úÖ ${pagePath} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`, 'green');
    passed++;
    
    const content = fs.readFileSync(pagePath, 'utf8');
    
    expectedElements.forEach(element => {
      const found = element.patterns.some(pattern => 
        content.includes(pattern) || 
        content.toLowerCase().includes(pattern.toLowerCase())
      );
      
      if (found) {
        log(`    ‚úÖ ${element.name}`, 'green');
        passed++;
      } else {
        log(`    ‚ö†Ô∏è  ${element.name} - –Ω–µ –Ω–∞–π–¥–µ–Ω`, 'yellow');
        warnings++;
        issues.push(`${pagePath}: ${element.name} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      }
    });
  }
  
  // 1. –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
  log('\nüè† –ì–õ–ê–í–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê (/)', 'cyan');
  testPageUI('src/app/page.tsx', [
    { name: '–ü–æ–∏—Å–∫ –≤–∞–∫–∞–Ω—Å–∏–π', patterns: ['search', '–ø–æ–∏—Å–∫', 'Search', 'input', 'placeholder'] },
    { name: '–ù–∞–≤–∏–≥–∞—Ü–∏—è', patterns: ['Header', 'nav', 'menu', 'navigation'] },
    { name: '–ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π', patterns: ['Button', 'button', 'onClick', 'href'] },
    { name: '–°–µ–∫—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞', patterns: ['section', 'div', 'className', 'container'] }
  ]);
  
  // 2. –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤–∞–∫–∞–Ω—Å–∏–π
  log('\nüíº –°–¢–†–ê–ù–ò–¶–ê –í–ê–ö–ê–ù–°–ò–ô (/jobs)', 'cyan');
  testPageUI('src/app/jobs/page.tsx', [
    { name: '–§–∏–ª—å—Ç—Ä—ã', patterns: ['filter', 'Filter', 'select', 'option', 'checkbox'] },
    { name: '–ö–∞—Ä—Ç–æ—á–∫–∏ –≤–∞–∫–∞–Ω—Å–∏–π', patterns: ['Card', 'card', 'JobCard', 'job-card'] },
    { name: '–ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π', patterns: ['Button', 'button', 'onClick', 'save', 'apply'] },
    { name: '–ü–∞–≥–∏–Ω–∞—Ü–∏—è', patterns: ['pagination', 'Pagination', 'page', 'next', 'prev'] },
    { name: '–ü–æ–∏—Å–∫', patterns: ['search', 'Search', 'input', 'query'] }
  ]);
  
  // 3. –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞
  log('\nüîê –°–¢–†–ê–ù–ò–¶–ê –í–•–û–î–ê (/auth/signin)', 'cyan');
  testPageUI('src/app/auth/signin/page.tsx', [
    { name: '–§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞', patterns: ['form', 'Form', 'onSubmit', 'handleSubmit'] },
    { name: '–ü–æ–ª–µ email', patterns: ['email', 'Email', 'type="email"', 'input'] },
    { name: '–ü–æ–ª–µ –ø–∞—Ä–æ–ª—è', patterns: ['password', 'Password', 'type="password"'] },
    { name: '–ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞', patterns: ['Button', 'button', '–í–æ–π—Ç–∏', 'Sign In', 'onClick'] },
    { name: '–°—Å—ã–ª–∫–∏', patterns: ['href', 'Link', 'link', '—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', 'signup'] }
  ]);
  
  // 4. –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
  log('\nüìù –°–¢–†–ê–ù–ò–¶–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò (/auth/signup)', 'cyan');
  testPageUI('src/app/auth/signup/page.tsx', [
    { name: '–§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', patterns: ['form', 'Form', 'onSubmit', 'handleSubmit'] },
    { name: '–ü–æ–ª—è —Ñ–æ—Ä–º—ã', patterns: ['input', 'Input', 'name', 'email', 'password'] },
    { name: '–í—ã–±–æ—Ä —Ä–æ–ª–∏', patterns: ['role', 'Role', 'select', 'option', 'CANDIDATE', 'EMPLOYER'] },
    { name: '–ö–Ω–æ–ø–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', patterns: ['Button', 'button', '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', 'Sign Up'] }
  ]);
  
  // 5. –î–∞—à–±–æ—Ä–¥
  log('\nüìä –î–ê–®–ë–û–†–î (/dashboard)', 'cyan');
  testPageUI('src/app/dashboard/page.tsx', [
    { name: '–ù–∞–≤–∏–≥–∞—Ü–∏—è', patterns: ['nav', 'Nav', 'menu', 'Menu', 'sidebar'] },
    { name: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', patterns: ['stats', 'Stats', 'statistics', 'count', 'number'] },
    { name: '–ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π', patterns: ['Button', 'button', 'onClick', 'action'] },
    { name: '–ö–∞—Ä—Ç–æ—á–∫–∏', patterns: ['Card', 'card', 'CardContent', 'CardHeader'] }
  ]);
  
  // 6. –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è
  log('\nüè¢ –°–¢–†–ê–ù–ò–¶–ê –†–ê–ë–û–¢–û–î–ê–¢–ï–õ–Ø (/employer)', 'cyan');
  testPageUI('src/app/employer/page.tsx', [
    { name: '–°–æ–∑–¥–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏', patterns: ['create', 'Create', 'new', 'New', 'add', 'Add'] },
    { name: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', patterns: ['manage', 'Manage', 'edit', 'Edit', 'delete', 'Delete'] },
    { name: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞', patterns: ['analytics', 'Analytics', 'chart', 'Chart', 'graph'] },
    { name: '–ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π', patterns: ['Button', 'button', 'onClick', 'action'] }
  ]);
  
  // 7. –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
  log('\nüëë –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨ (/admin)', 'cyan');
  testPageUI('src/app/admin/page.tsx', [
    { name: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏', patterns: ['users', 'Users', 'user', 'User'] },
    { name: '–ú–æ–¥–µ—Ä–∞—Ü–∏—è', patterns: ['moderation', 'Moderation', 'moderate', 'Moderate'] },
    { name: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞', patterns: ['analytics', 'Analytics', 'stats', 'Stats'] },
    { name: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', patterns: ['settings', 'Settings', 'config', 'Config'] }
  ]);
  
  // 8. –ü—Ä–æ—Ñ–∏–ª—å
  log('\nüë§ –ü–†–û–§–ò–õ–¨ (/profile)', 'cyan');
  testPageUI('src/app/profile/page.tsx', [
    { name: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', patterns: ['edit', 'Edit', 'editing', 'Editing', 'onClick'] },
    { name: '–§–æ—Ä–º–∞ –ø—Ä–æ—Ñ–∏–ª—è', patterns: ['form', 'Form', 'input', 'Input', 'onChange'] },
    { name: '–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤', patterns: ['upload', 'Upload', 'file', 'File', 'avatar'] },
    { name: '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ', patterns: ['save', 'Save', 'onSubmit', 'handleSubmit'] }
  ]);
  
  // 9. –†–µ–∑—é–º–µ
  log('\nüìÑ –†–ï–ó–Æ–ú–ï (/resumes)', 'cyan');
  testPageUI('src/app/resumes/page.tsx', [
    { name: '–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑—é–º–µ', patterns: ['create', 'Create', 'new', 'New', 'add', 'Add'] },
    { name: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', patterns: ['edit', 'Edit', 'update', 'Update'] },
    { name: '–£–¥–∞–ª–µ–Ω–∏–µ', patterns: ['delete', 'Delete', 'remove', 'Remove'] },
    { name: '–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä', patterns: ['preview', 'Preview', 'view', 'View'] }
  ]);
  
  // 10. –ö–æ–º–ø–∞–Ω–∏–∏
  log('\nüè¢ –ö–û–ú–ü–ê–ù–ò–ò (/companies)', 'cyan');
  testPageUI('src/app/companies/page.tsx', [
    { name: '–°–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π', patterns: ['company', 'Company', 'companies', 'Companies'] },
    { name: '–ü–æ–∏—Å–∫', patterns: ['search', 'Search', 'input', 'Input', 'query'] },
    { name: '–§–∏–ª—å—Ç—Ä—ã', patterns: ['filter', 'Filter', 'select', 'Select'] },
    { name: '–ö–∞—Ä—Ç–æ—á–∫–∏', patterns: ['Card', 'card', 'CardContent', 'CardHeader'] }
  ]);
  
  // 11. –ö–∞–Ω–¥–∏–¥–∞—Ç—ã
  log('\nüë• –ö–ê–ù–î–ò–î–ê–¢–´ (/candidates)', 'cyan');
  testPageUI('src/app/candidates/page.tsx', [
    { name: '–°–ø–∏—Å–æ–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤', patterns: ['candidate', 'Candidate', 'candidates', 'Candidates'] },
    { name: '–ü–æ–∏—Å–∫', patterns: ['search', 'Search', 'input', 'Input'] },
    { name: '–§–∏–ª—å—Ç—Ä—ã', patterns: ['filter', 'Filter', 'select', 'Select'] },
    { name: '–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞', patterns: ['sort', 'Sort', 'order', 'Order'] }
  ]);
  
  // 12. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  log('\nüîî –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø (/notifications)', 'cyan');
  testPageUI('src/app/notifications/page.tsx', [
    { name: '–°–ø–∏—Å–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π', patterns: ['notification', 'Notification', 'notifications', 'Notifications'] },
    { name: '–î–µ–π—Å—Ç–≤–∏—è', patterns: ['action', 'Action', 'onClick', 'Button'] },
    { name: '–°—Ç–∞—Ç—É—Å—ã', patterns: ['status', 'Status', 'read', 'Read', 'unread', 'Unread'] }
  ]);
  
  // 13. –ò–∑–±—Ä–∞–Ω–Ω–æ–µ
  log('\n‚≠ê –ò–ó–ë–†–ê–ù–ù–û–ï (/favorites)', 'cyan');
  testPageUI('src/app/favorites/page.tsx', [
    { name: '–°–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ', patterns: ['favorite', 'Favorite', 'favorites', 'Favorites'] },
    { name: '–£–¥–∞–ª–µ–Ω–∏–µ', patterns: ['delete', 'Delete', 'remove', 'Remove'] },
    { name: '–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞', patterns: ['sort', 'Sort', 'order', 'Order'] }
  ]);
  
  // 14. –û—Ç–∫–ª–∏–∫–∏
  log('\nüìù –û–¢–ö–õ–ò–ö–ò (/otkliki)', 'cyan');
  testPageUI('src/app/otkliki/page.tsx', [
    { name: '–°–ø–∏—Å–æ–∫ –æ—Ç–∫–ª–∏–∫–æ–≤', patterns: ['application', 'Application', 'applications', 'Applications'] },
    { name: '–°—Ç–∞—Ç—É—Å—ã', patterns: ['status', 'Status', 'pending', 'Pending', 'approved', 'Approved'] },
    { name: '–î–µ–π—Å—Ç–≤–∏—è', patterns: ['action', 'Action', 'onClick', 'Button'] }
  ]);
  
  // 15. –ó–∞—è–≤–∫–∏
  log('\nüìã –ó–ê–Ø–í–ö–ò (/applications)', 'cyan');
  testPageUI('src/app/applications/page.tsx', [
    { name: '–°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫', patterns: ['application', 'Application', 'applications', 'Applications'] },
    { name: '–°—Ç–∞—Ç—É—Å—ã', patterns: ['status', 'Status', 'state', 'State'] },
    { name: '–î–µ–π—Å—Ç–≤–∏—è', patterns: ['action', 'Action', 'onClick', 'Button'] }
  ]);
  
  // 16. –ß–∞—Ç
  log('\nüí¨ –ß–ê–¢ (/chat)', 'cyan');
  testPageUI('src/app/chat/page.tsx', [
    { name: '–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤', patterns: ['chat', 'Chat', 'message', 'Message'] },
    { name: '–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π', patterns: ['send', 'Send', 'input', 'Input', 'onSubmit'] },
    { name: '–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π', patterns: ['receive', 'Receive', 'get', 'Get'] }
  ]);
  
  // 17. –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
  log('\nüìà –ê–ù–ê–õ–ò–¢–ò–ö–ê (/analytics)', 'cyan');
  testPageUI('src/app/analytics/page.tsx', [
    { name: '–ì—Ä–∞—Ñ–∏–∫–∏', patterns: ['chart', 'Chart', 'graph', 'Graph', 'recharts'] },
    { name: '–§–∏–ª—å—Ç—Ä—ã', patterns: ['filter', 'Filter', 'date', 'Date', 'range', 'Range'] },
    { name: '–≠–∫—Å–ø–æ—Ä—Ç', patterns: ['export', 'Export', 'download', 'Download'] }
  ]);
  
  // 18. –ö–∞—Ä—å–µ—Ä–Ω–∞—è –∫–∞—Ä—Ç–∞
  log('\nüó∫Ô∏è –ö–ê–†–¨–ï–†–ù–ê–Ø –ö–ê–†–¢–ê (/career-map)', 'cyan');
  testPageUI('src/app/career-map/page.tsx', [
    { name: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞', patterns: ['map', 'Map', 'career', 'Career'] },
    { name: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–ª—è–º–∏', patterns: ['goal', 'Goal', 'goals', 'Goals'] },
    { name: '–ü—Ä–æ–≥—Ä–µ—Å—Å', patterns: ['progress', 'Progress', 'track', 'Track'] }
  ]);
  
  // 19. AI —Ñ—É–Ω–∫—Ü–∏–∏
  log('\nü§ñ AI –§–£–ù–ö–¶–ò–ò (/ai-features)', 'cyan');
  testPageUI('src/app/ai-features/page.tsx', [
    { name: 'AI —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏', patterns: ['ai', 'AI', 'recommendation', 'Recommendation'] },
    { name: 'AI –∞–Ω–∞–ª–∏–∑', patterns: ['analysis', 'Analysis', 'analyze', 'Analyze'] },
    { name: 'AI —á–∞—Ç', patterns: ['chat', 'Chat', 'bot', 'Bot'] }
  ]);
  
  // 20. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  log('\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò (/ai-recommendations)', 'cyan');
  testPageUI('src/app/ai-recommendations/page.tsx', [
    { name: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏', patterns: ['recommendation', 'Recommendation', 'personal', 'Personal'] },
    { name: '–§–∏–ª—å—Ç—Ä—ã', patterns: ['filter', 'Filter', 'select', 'Select'] },
    { name: '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ', patterns: ['save', 'Save', 'bookmark', 'Bookmark'] }
  ]);
  
  // 21. –¢–∞—Ä–∏—Ñ—ã
  log('\nüí∞ –¢–ê–†–ò–§–´ (/pricing)', 'cyan');
  testPageUI('src/app/pricing/page.tsx', [
    { name: '–¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã', patterns: ['plan', 'Plan', 'pricing', 'Pricing', 'price', 'Price'] },
    { name: '–ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞', patterns: ['Button', 'button', 'select', 'Select', 'choose', 'Choose'] },
    { name: '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ', patterns: ['compare', 'Compare', 'comparison', 'Comparison'] }
  ]);
  
  // 22. –ö–æ–Ω—Ç–∞–∫—Ç—ã
  log('\nüìû –ö–û–ù–¢–ê–ö–¢–´ (/contacts)', 'cyan');
  testPageUI('src/app/contacts/page.tsx', [
    { name: '–§–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏', patterns: ['form', 'Form', 'contact', 'Contact', 'message', 'Message'] },
    { name: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', patterns: ['contact', 'Contact', 'info', 'Info', 'address', 'Address'] },
    { name: '–û—Ç–ø—Ä–∞–≤–∫–∞', patterns: ['send', 'Send', 'submit', 'Submit', 'onSubmit'] }
  ]);
  
  // 23. –ü–æ–º–æ—â—å
  log('\n‚ùì –ü–û–ú–û–©–¨ (/help)', 'cyan');
  testPageUI('src/app/help/page.tsx', [
    { name: 'FAQ', patterns: ['faq', 'FAQ', 'question', 'Question', 'answer', 'Answer'] },
    { name: '–ü–æ–∏—Å–∫', patterns: ['search', 'Search', 'input', 'Input'] },
    { name: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', patterns: ['category', 'Category', 'categories', 'Categories'] }
  ]);
  
  // 24. –ù–∞—Å—Ç—Ä–æ–π–∫–∏
  log('\n‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò (/settings)', 'cyan');
  testPageUI('src/app/settings/page.tsx', [
    { name: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è', patterns: ['profile', 'Profile', 'setting', 'Setting'] },
    { name: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', patterns: ['notification', 'Notification', 'notify', 'Notify'] },
    { name: '–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å', patterns: ['privacy', 'Privacy', 'private', 'Private'] }
  ]);
  
  // 25. –°—Ç–∞—Ç—É—Å
  log('\nüìä –°–¢–ê–¢–£–° (/status)', 'cyan');
  testPageUI('src/app/status/page.tsx', [
    { name: '–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã', patterns: ['status', 'Status', 'system', 'System'] },
    { name: '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥', patterns: ['monitor', 'Monitor', 'health', 'Health'] },
    { name: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', patterns: ['stats', 'Stats', 'statistics', 'Statistics'] }
  ]);
  
  // 26. –û—Ñ–ª–∞–π–Ω
  log('\nüì± –û–§–õ–ê–ô–ù (/offline)', 'cyan');
  testPageUI('src/app/offline/page.tsx', [
    { name: '–û—Ñ–ª–∞–π–Ω —Å–æ–æ–±—â–µ–Ω–∏–µ', patterns: ['offline', 'Offline', 'message', 'Message'] },
    { name: '–ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è', patterns: ['refresh', 'Refresh', 'reload', 'Reload', 'Button'] }
  ]);
  
  // 27. –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ã
  log('\nüéì –£–ù–ò–í–ï–†–°–ò–¢–ï–¢–´ (/university)', 'cyan');
  testPageUI('src/app/university/page.tsx', [
    { name: '–°–ø–∏—Å–æ–∫ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–≤', patterns: ['university', 'University', 'universities', 'Universities'] },
    { name: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', patterns: ['register', 'Register', 'registration', 'Registration'] },
    { name: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', patterns: ['manage', 'Manage', 'admin', 'Admin'] }
  ]);
  
  // 28. –°–æ–∑–¥–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏
  log('\n‚ûï –°–û–ó–î–ê–ù–ò–ï –í–ê–ö–ê–ù–°–ò–ò (/post-job)', 'cyan');
  testPageUI('src/app/post-job/page.tsx', [
    { name: '–§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è', patterns: ['form', 'Form', 'create', 'Create', 'job', 'Job'] },
    { name: '–ü–æ–ª—è –≤–∞–∫–∞–Ω—Å–∏–∏', patterns: ['title', 'Title', 'description', 'Description', 'input', 'Input'] },
    { name: '–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä', patterns: ['preview', 'Preview', 'view', 'View'] }
  ]);
  
  // 29. –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏
  log('\nüéì –°–û–ó–î–ê–ù–ò–ï –°–¢–ê–ñ–ò–†–û–í–ö–ò (/internships/create)', 'cyan');
  testPageUI('src/app/internships/create/page.tsx', [
    { name: '–§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è', patterns: ['form', 'Form', 'create', 'Create', 'internship', 'Internship'] },
    { name: '–ü–æ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏', patterns: ['title', 'Title', 'description', 'Description', 'input', 'Input'] },
    { name: '–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä', patterns: ['preview', 'Preview', 'view', 'View'] }
  ]);
  
  // 30. –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å
  log('\nüîí –ü–†–ò–í–ê–¢–ù–û–°–¢–¨ (/privacy)', 'cyan');
  testPageUI('src/app/privacy/page.tsx', [
    { name: '–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏', patterns: ['privacy', 'Privacy', 'policy', 'Policy'] },
    { name: '–ù–∞–≤–∏–≥–∞—Ü–∏—è', patterns: ['nav', 'Nav', 'menu', 'Menu', 'section', 'Section'] }
  ]);
  
  // 31. –£—Å–ª–æ–≤–∏—è
  log('\nüìã –£–°–õ–û–í–ò–Ø (/terms)', 'cyan');
  testPageUI('src/app/terms/page.tsx', [
    { name: '–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è', patterns: ['terms', 'Terms', 'conditions', 'Conditions'] },
    { name: '–ù–∞–≤–∏–≥–∞—Ü–∏—è', patterns: ['nav', 'Nav', 'menu', 'Menu', 'section', 'Section'] }
  ]);
  
  // 32. Cookies
  log('\nüç™ COOKIES (/cookies)', 'cyan');
  testPageUI('src/app/cookies/page.tsx', [
    { name: '–ü–æ–ª–∏—Ç–∏–∫–∞ cookies', patterns: ['cookie', 'Cookie', 'cookies', 'Cookies'] },
    { name: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', patterns: ['manage', 'Manage', 'control', 'Control'] }
  ]);
  
  // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
  log('\n' + '=' * 60, 'blue');
  log('üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ UI –≠–õ–ï–ú–ï–ù–¢–û–í', 'blue');
  log('=' * 60, 'blue');
  
  log(`‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${passed}`, 'green');
  log(`‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${failed}`, 'red');
  log(`‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${warnings}`, 'yellow');
  
  const total = passed + failed + warnings;
  const successRate = ((passed / total) * 100).toFixed(1);
  
  log(`\nüìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: ${successRate}%`, successRate > 80 ? 'green' : 'yellow');
  
  if (failed === 0) {
    log('\nüéâ –í–°–ï UI –≠–õ–ï–ú–ï–ù–¢–´ –ù–ê–ô–î–ï–ù–´!', 'green');
    log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–º–µ–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã', 'green');
    log('‚úÖ –í—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã', 'green');
    
    if (warnings > 0) {
      log('\n‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è, –Ω–æ —Å–∏—Å—Ç–µ–º–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞', 'yellow');
    }
  } else {
    log('\n‚ùå –ù–ê–ô–î–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´!', 'red');
    log('‚ö†Ô∏è  –¢—Ä–µ–±—É—é—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è', 'yellow');
  }
  
  // –î–µ—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
  if (issues.length > 0) {
    log('\nüîç –î–ï–¢–ê–õ–¨–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:', 'cyan');
    issues.slice(0, 20).forEach(issue => {
      log(`  ‚Ä¢ ${issue}`, 'yellow');
    });
    
    if (issues.length > 20) {
      log(`  ... –∏ –µ—â–µ ${issues.length - 20} –ø—Ä–æ–±–ª–µ–º`, 'yellow');
    }
  }
  
  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:', 'cyan');
  log('  ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ npm run dev –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è', 'yellow');
  log('  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–∂–¥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ', 'yellow');
  log('  ‚Ä¢ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –∏ —Ñ–æ—Ä–º—ã', 'yellow');
  log('  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–≤–∏–≥–∞—Ü–∏—é –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏', 'yellow');
  log('  ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ñ–æ—Ä–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç', 'yellow');
  
  return failed === 0;
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (require.main === module) {
  testUIElements();
}

module.exports = { testUIElements };
